;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SMC_UTIL.INI Version 1.2 By Blackaddr
;
; Revision History
; 1.0 Initial Release
; 1.1 Update AIO patches to fully support PlayNCharge without issue
; 1.2 Added AIO patches for SMC versions 1.10, 1.13, 1.50, 1.53, 1.9
;     Removed MS debug function from all AIO patches.
;
; This file contains several sections described below.  Please
; note that the SMC_UTIL engine ignores all whitespace in this file.
; Only one section is processed  at runtime based on the command line usage.
; The file is CASE SENSITIVE.
;
; The parsing engine for this file is not very robust, it can detect only
; basic errors.  Please follow the templates carefully.
;
; Comment lines must begin with a ';'.  Please do not place
; comments at the end of any line containing headers, data, etc.
;
; PATCH   - this section defines patches that search for a binary pattern and
;           replace the specifed bytes.  Useful for things like disabling code,
;           changing JTAG I/O, etc.
;
; CUSTOM  - this section allows you to define custom patches in INTEL HEX (I-HEX) format.
;           Custom patches do not use search engines, they are applied at the address
;           specifed in the I-HEX line.  Custom patches will only be applied if the
;           SMC version matches the specified version.
;
;           Custom patches are a convienient way to create a modified SMC built up from
;           the original file.  Future fixes or changes can simply be added as new
;           custom definitions.
;
; ANALYSIS - this section is similar to the 'PATCHES' section, except they are used for
;            reporting only.  This can be helpful to determine the state of the SMC.
;            Examples include checking for the PCIe write bug, checking which I/O are used
;            for JTAG, etc.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; PATCH
;
; When using the 'patch' mode, the program will execute the
; patches defined in this section.  The format is:
; 
; [NAME=<pattern_name>]
; [PAT=<code pattern>]
; [WILD=<wild card flags>]
; [<hex_offset>=<data>]
; ...
; [<hex_offset>=<data>]
; [\<pattern_name>]
;
; The pattern is a hexstring representing bytes.  The binary wildcard field
; has one bit for each pattern byte.  A '1' will mask the corresponding byte so it is
; not compared in the search.  A '0' means it is compared.  This is useful for
; parameters that might change, like SMC I/O used, etc.
;
; If the pattern match is found, the data will be modified using each <byte_offset>=<data>
; where <hex_offset> is measured from the begining of the pattern, and <data> is the new byte
; defined in hex.
; 
[PATCH]

[NAME=PCI_MASK_BUG]
; Search for the original hack's PCI write mask bug
; replace 0xD0 0xE0 0xF8 with 0xF8 0xD0 0xE0
;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
[PAT=2407D0E0F8]
;     0123456789            <= this line is just for byte labeling
[WILD=00000]
[2=F8]
[3=D0]
[4=E0]
[\PCI_MASK_BUG]

;;PNC_NO_CHARGE PATCH
;;This patch can modify an SMC that has been built with the AIO script.
;;Instead of charging in standby, it will shut the console down.  This will
;;allow you charge while using the console, but shutdown completely without having
;;to unplug the cable if you don't like leaving the console running.
;[NAME=PNC_NO_CHARGE]
;; When detecting charging mode, replace the argon msg with a shutdown command
;; POP R0  LJMP <D/C> <D/C>  SETB <D/C> LJMP
;; = 0xD0 0x00 0x02 0x?? 0xD2 0x?? 0x02
;;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
;[PAT=D000020000D20002]
;;     0123456789            <= this line is just for byte labeling
;[WILD=00011010]
;; replace the SETB <D/C> with SETB 04
;[6=04]
;[\PNC_NO_CHARGE]

;;UNCONDITIONAL_BOOT
;;This patch will unconditionally execute the JTAG during start events
;;restoring behavior to the original hack.  i.e.  Reboots on charging,
;[NAME=UNCONDITIONAL_BOOT]
;; Search for the JTAG boot gate
;; PUSH R7 MOV R0, <D/C>  MOV A,@R0  CJNE A, #0h, #025h
;; = 0xC0 0x07 0x78 0x?? 0xE6 0xB4 0x00 0x??
;;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
;[PAT=C0077800E6B40000]
;;     0123456789            <= this line is just for byte labeling
;[WILD=00010001]
;[2=00]
;[3=E5]
;[4=3D]
;[6=82]
;[\UNCONDITIONAL_BOOT]

;[NAME=TMS_PATCH]
;; Search for the 'set_jtag_tms' and 'clr_jtag_tms' functions
;; SETB <TMS> MOV <TMS_DELAY> DJNZ ACC <addr> RET CLR <TMS> 
;; = 0xD2 0x?? 0x74 0x?? 0xD5 0xE0 0xFD 0x22 0xC2 0x??
;;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
;[PAT=D2007400D5E0FD22C200]
;;     0123456789            <= this line is just for byte labeling
;[WILD=0101000001]
;; AUD_CLAMP = CC, DB1F1 = C0, ARGON_DATA = 83, TRAY_OPEN = CF
;[1=CC]
;[9=CC]
;[\TMS_PATCH]

;;[NAME=TDI_PATCH_0_of_3]
;; clk_jtag_data_out subroutine
;; MOV <TDI>, C  ACALL <addr>  DJNZ R7, -8  RET
;; = 0x92 <TDI> ACALL <addr> DF F8 22
;;     0 1 2 3 4 5 6    <= this line is just for byte labeling
;[PAT=92000000DFF822]
;;     0123456	       <= this line is just for byte labeling
;[WILD=0111000]
;; AUD_CLAMP = CC, DB1F1 = C0, ARGON_DATA = 83, TRAY_OPEN = CF
;[1=C0]
;[\TDI_PATCH_0_of_3]


;[NAME=TDI_PATCH_1_of_3]
;; clk_data_into_IR_reg subroutine
;; CLR <TDI>  MOV A, #02h  ACALL <don't care>  ACALL <don't care>  MOV A, #02h
;; = 0xC2 <TDI> 0x74 0x02 0x00 0x00 0x00 0x00 0x74 0x02
;;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
;[PAT=C2007402000000007402]
;;     0123456789	       <= this line is just for byte labeling
;[WILD=0100111100]
;; AUD_CLAMP = CC, DB1F1 = C0, ARGON_DATA = 83, TRAY_OPEN = CF
;[1=C0]
;[\TDI_PATCH_1_of_3]

;[NAME=TDI_PATCH_2_of_3]
;; clk_data_into_DR_reg subroutine
;; MOV R7, #01h  ACALL <don't care>  CLR <TDI>  MOV A, #01h
;; = 0x7F 0x01 0x00 0x00 0xC2 <TDI> 0x74 0x01
;;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
;[PAT=7F010000C2007401]
;;     0123456789	       <= this line is just for byte labeling
;[WILD=00110100]
;; AUD_CLAMP = CC, DB1F1 = C0, ARGON_DATA = 83, TRAY_OPEN = CF
;[5=C0]
;[\TDI_PATCH_2_of_3]

;[NAME=TDI_PATCH_3_of_3]
;; main jtag hack subroutine
;; mov @R0, <don't care>  MOV R0, <don't care>  MOV @R0, <don't care>  SETB <TDI>
;; = 0x76 0x00 0x78 0x00 0x76 0x00 0xD2 0x00
;;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
;[PAT=760078007600D200]
;;     0123456789	       <= this line is just for byte labeling
;[WILD=01010101]
;; AUD_CLAMP = CC, DB1F1 = C0, ARGON_DATA = 83, TRAY_OPEN = CF
;[7=C0]
;[\TDI_PATCH_3_of_3]

[\PATCH]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CUSTOM
;
; The program will execute all custom Intel Hex patches that match the SMC version
; detected.  If the patch version is set to "*", then the patch will be applied
; regardless of the detected SMC version.  The patches are applied sequentially in order.
; As of SMC_UTIL version 1.2, the 'smc_version' can be a comma separated list.
;
; Append any custom patches you want to this file using the following format
;
; [patch_name=smc_version]
; INTEL HEX patchline
; INTEL HEX patchline
; ...
; :00000001FF
; [\patch_name]
;
;
; The ":00000001FF" is optional, it is ignored by the patch engine.
; You can add as many patches as you wish.
;
; The default All-In-One patches for each SMC version are below.
;
[CUSTOM]

[AIO110=1.10]
:0307560075817E2C
:0307750075817E0D
:03085900022E5F0D
:031DFA00022E4175
:031F6D00022E4CF5
:03122D00022E7519
:0307C20000000034
:102D0000D000001B00020100D000001B00020100E7
:102D1000D0140013EA00C000D01400070000000621
:102D2000D0150013EA001000D015000700000006BF
:102D3000EA00C00F00000200EA00C01F0013036099
:102D4000EA00C02300002080D2CC7428D5E0FD2208
:102D5000C2CC80F6B1487405B193B1507401A1930F
:102D6000EC2403F8740FF6EC2404F87F04E493F6E3
:102D7000A308DFF922E4A8047A08F608DAFC227A2C
:102D800003DAFE22C2C3B17FD2C3B17FC2C3B17F17
:102D9000A2C222B184D5E0FB22A8047A08E613F689
:102DA00008DAFA22B19992C0B184DFF822C0E0ECCF
:102DB0002407F8D0E0F6B1487402B193B150740220
:102DC000B1937F07B1A4B1487F01B1A4C2C074021E
:102DD000B193B1507402B19322D5E002A1E1FFB1E9
:102DE000A4B1487F01B1A4C2C07401B193B15074C1
:102DF00001B1932274E0B1ADB1607424B1D92274F1
:102E0000E4B1ADB1757401D11F7401B1D92274E17F
:102E1000B1ADB167C11A74E3B1AD7420B1D922C0AC
:102E2000E0EC2407F8D0E0F622B1F4B1FFD116228D
:102E3000B1F4D10EB1FF227E09902D00D130DEFC1D
:102E400022C000787E7600D000021E9320150BC0B1
:102E500000787E7600D000021F72D248021F72B442
:102E60000403022E6802085E787DB6AA0375F50792
:102E7000760002085CC000C002C003C004C006C0E7
:102E800007787EE6B40027AC810C7B08C0E0DBFC51
:102E90000000B148B154D137B15400007B08D0E0F4
:102EA000DBFC787D76AA787E7655D2C0B148D0001A
:102EB000D002D003D004D006D00720130302123072
:032EC000C20E221D
:00000001FF
[\AIO110]

[AIO113=1.13]
:030756007581BBEF
:030775007581BBD0
:03085900022E5F0D
:031E4600022E4128
:031FB900022E4CA9
:03127900022E75CD
:0307C20000000034
:102D0000D000001B00020100D000001B00020100E7
:102D1000D0140013EA00C000D01400070000000621
:102D2000D0150013EA001000D015000700000006BF
:102D3000EA00C00F00000200EA00C01F0013036099
:102D4000EA00C02300002080D2CC7428D5E0FD2208
:102D5000C2CC80F6B1487405B193B1507401A1930F
:102D6000EC2403F8740FF6EC2404F87F04E493F6E3
:102D7000A308DFF922E4A8047A08F608DAFC227A2C
:102D800003DAFE22C2C3B17FD2C3B17FC2C3B17F17
:102D9000A2C222B184D5E0FB22A8047A08E613F689
:102DA00008DAFA22B19992C0B184DFF822C0E0ECCF
:102DB0002407F8D0E0F6B1487402B193B150740220
:102DC000B1937F07B1A4B1487F01B1A4C2C074021E
:102DD000B193B1507402B19322D5E002A1E1FFB1E9
:102DE000A4B1487F01B1A4C2C07401B193B15074C1
:102DF00001B1932274E0B1ADB1607424B1D92274F1
:102E0000E4B1ADB1757401D11F7401B1D92274E17F
:102E1000B1ADB167C11A74E3B1AD7420B1D922C0AC
:102E2000E0EC2407F8D0E0F622B1F4B1FFD116228D
:102E3000B1F4D10EB1FF227E09902D00D130DEFC1D
:102E400022C00078BB7600D000021EDF20150BC028
:102E50000078BB7600D000021FBED248021FBEB46D
:102E60000403022E6802085E78BAB6AA0375F50755
:102E7000760002085CC000C002C003C004C006C0E7
:102E80000778BBE6B40027AC810C7B08C0E0DBFC14
:102E90000000B148B154D137B15400007B08D0E0F4
:102EA000DBFC78BA76AA78BB7655D2C0B148D000A0
:102EB000D002D003D004D006D00720130302127C26
:032EC000C20E221D
:00000001FF
[\AIO113]

[AIO150=1.50]
:0307560075817E2C
:0307750075817E0D
:03085100022F1F54
:031D7600022F0138
:031EE900022F0CB9
:03114D00022F3737
:0307B60000000040
:102DC000D000001B00020100D000001B0002010027
:102DD000D0140013EA00C000D01400070000000661
:102DE000D0150013EA001000D015000700000006FF
:102DF000EA00C00F00000200EA00C01F00130360D9
:102E0000EA00C02300002080D2C17428D5E0FD2252
:102E1000C2C180F6D1087405D153D1107401C153D9
:102E2000EC2403F8740FF6EC2404F87F04E493F622
:102E3000A308DFF922E4A8047A08F608DAFC227A6B
:102E400003DAFE22C2C3D13FD2C3D13FC2C3D13FB6
:102E5000A2C222D144D5E0FB22A8047A08E613F6E8
:102E600008DAFA22D15992C0D144DFF822C0E0EC4E
:102E70002407F8D0E0F6D1087402D153D1107402BF
:102E8000D1537F07D164D1087F01D164C2C07402DD
:102E9000D153D1107402D15322D5E002C1A1FFD188
:102EA00064D1087F01D164C2C07401D153D11074C0
:102EB00001D1532274E0D16DD1207424D1992274B0
:102EC000E4D16DD1357401D1DF7401D1992274E15F
:102ED000D16DD127C1DA74E3D16D7420D19922C0AC
:102EE000E0EC2407F8D0E0F622D1B4D1BFD1D6224D
:102EF000D1B4D1CED1BF227E09902DC0D1F0DEFC5D
:102F000022C000787E7600D000021E0F20150BC074
:102F100000787E7600D000021EEED245021EEEB48E
:102F20000403022F28020856787DB6AA0575F50716
:102F3000C2C27600020854C000C002C003C004C070
:102F400006C007787EE6B40029D2C2AC810C7B08AB
:102F5000C0E0DBFC0000D108D114D1F7D11400008F
:102F60007B08D0E0DBFC787D76AA787E7655D2C0EF
:102F7000D108D000D002D003D004D006D00720134F
:072F800003021150C20E22F2
:00000001FF
[\AIO150]

[AIO151=1.51,1.53]
:0307560075817E2C
:0307750075817E0D
:03085100022F1F54
:031D9400022F011A
:031F0700022F0C9A
:03115300022F3731
:0307B60000000040
:102DC000D000001B00020100D000001B0002010027
:102DD000D0140013EA00C000D01400070000000661
:102DE000D0150013EA001000D015000700000006FF
:102DF000EA00C00F00000200EA00C01F00130360D9
:102E0000EA00C02300002080D2C17428D5E0FD2252
:102E1000C2C180F6D1087405D153D1107401C153D9
:102E2000EC2403F8740FF6EC2404F87F04E493F622
:102E3000A308DFF922E4A8047A08F608DAFC227A6B
:102E400003DAFE22C2C3D13FD2C3D13FC2C3D13FB6
:102E5000A2C222D144D5E0FB22A8047A08E613F6E8
:102E600008DAFA22D15992C0D144DFF822C0E0EC4E
:102E70002407F8D0E0F6D1087402D153D1107402BF
:102E8000D1537F07D164D1087F01D164C2C07402DD
:102E9000D153D1107402D15322D5E002C1A1FFD188
:102EA00064D1087F01D164C2C07401D153D11074C0
:102EB00001D1532274E0D16DD1207424D1992274B0
:102EC000E4D16DD1357401D1DF7401D1992274E15F
:102ED000D16DD127C1DA74E3D16D7420D19922C0AC
:102EE000E0EC2407F8D0E0F622D1B4D1BFD1D6224D
:102EF000D1B4D1CED1BF227E09902DC0D1F0DEFC5D
:102F000022C000787E7600D000021E2D20150BC056
:102F100000787E7600D000021F0CD245021F0CB450
:102F20000403022F28020856787DB6AA0575F50716
:102F3000C2C27600020854C000C002C003C004C070
:102F400006C007787EE6B40029D2C2AC810C7B08AB
:102F5000C0E0DBFC0000D108D114D1F7D11400008F
:102F60007B08D0E0DBFC787D76AA787E7655D2C0EF
:102F7000D108D000D002D003D004D006D00720134F
:072F800003021156C20E22EC
:00000001FF
[\AIO151]

[AIO16=1.6]
:030756007581BBEF
:030775007581BBD0
:03085900022E620A
:031E8400022E44E7
:031FF700022E4F68
:03127900022E78CA
:0307C20000000034
:102D0300D000001B00020100D000001B00020100E4
:102D1300D0140013EA00C000D0140007000000061E
:102D2300D0150013EA001000D015000700000006BC
:102D3300EA00C00F00000200EA00C01F0013036096
:102D4300EA00C02300002080D2CC7428D5E0FD2205
:102D5300C2CC80F6B14B7405B196B1537401A19600
:102D6300EC2403F8740FF6EC2404F87F04E493F6E0
:102D7300A308DFF922E4A8047A08F608DAFC227A29
:102D830003DAFE22C2C3B182D2C3B182C2C3B1820B
:102D9300A2C222B187D5E0FB22A8047A08E613F683
:102DA30008DAFA22B19C92C0B187DFF822C0E0ECC6
:102DB3002407F8D0E0F6B14B7402B196B153740214
:102DC300B1967F07B1A7B14B7F01B1A7C2C074020F
:102DD300B196B1537402B19622D5E002A1E4FFB1DA
:102DE300A7B14B7F01B1A7C2C07401B196B15374AF
:102DF30001B1962274E0B1B0B1637424B1DC2274E2
:102E0300E4B1B0B1787401D1227401B1DC2274E170
:102E1300B1B0B16AC11D74E3B1B07420B1DC22C09A
:102E2300E0EC2407F8D0E0F622B1F7D102D1192261
:102E3300B1F7D111D102227E09902D03D133DEFCEB
:102E430022C00078BB7600D000021F1D20150BC0E6
:102E53000078BB7600D000021FFCD24A021FFCB4EC
:102E63000403022E6B02085E78BAB6AA0375F5074F
:102E7300760002085CC000C002C003C004C006C0E4
:102E83000778BBE6B40027AC810C7B08C0E0DBFC11
:102E93000000B14BB157D13AB15700007B08D0E0E5
:102EA300DBFC78BA76AA78BB7655D2C0B14BD0009A
:102EB300D002D003D004D006D00720130302127C23
:032EC300C20E221A
:00000001FF
[\AIO16]

[AIO19=1.9]
:0307560075817E2C
:0307750075817E0D
:03085900022E620A
:031DDF00022E448D
:031F5200022E4F0D
:03121800022E782B
:0307C20000000034
:102D0300D000001B00020100D000001B00020100E4
:102D1300D0140013EA00C000D0140007000000061E
:102D2300D0150013EA001000D015000700000006BC
:102D3300EA00C00F00000200EA00C01F0013036096
:102D4300EA00C02300002080D2CC7428D5E0FD2205
:102D5300C2CC80F6B14B7405B196B1537401A19600
:102D6300EC2403F8740FF6EC2404F87F04E493F6E0
:102D7300A308DFF922E4A8047A08F608DAFC227A29
:102D830003DAFE22C2C3B182D2C3B182C2C3B1820B
:102D9300A2C222B187D5E0FB22A8047A08E613F683
:102DA30008DAFA22B19C92C0B187DFF822C0E0ECC6
:102DB3002407F8D0E0F6B14B7402B196B153740214
:102DC300B1967F07B1A7B14B7F01B1A7C2C074020F
:102DD300B196B1537402B19622D5E002A1E4FFB1DA
:102DE300A7B14B7F01B1A7C2C07401B196B15374AF
:102DF30001B1962274E0B1B0B1637424B1DC2274E2
:102E0300E4B1B0B1787401D1227401B1DC2274E170
:102E1300B1B0B16AC11D74E3B1B07420B1DC22C09A
:102E2300E0EC2407F8D0E0F622B1F7D102D1192261
:102E3300B1F7D111D102227E09902D03D133DEFCEB
:102E430022C000787E7600D000021E7820150BC0C9
:102E530000787E7600D000021F57D248021F57B475
:102E63000403022E6B02085E787DB6AA0375F5078C
:102E7300760002085CC000C002C003C004C006C0E4
:102E830007787EE6B40027AC810C7B08C0E0DBFC4E
:102E93000000B14BB157D13AB15700007B08D0E0E5
:102EA300DBFC787D76AA787E7655D2C0B14BD00014
:102EB300D002D003D004D006D00720130302121B84
:032EC300C20E221A
:00000001FF
[\AIO19]

[AIO23=2.3]
:030756007581BBEF
:030775007581BBD0
:03085900022ED29A
:031E9F00022EB45C
:03201200022EBFDC
:03128700022EE84C
:0307C20000000034
:102D7300D000001B00020100D000001B0002010074
:102D8300D0140013EA00C000D014000700000006AE
:102D9300D0150013EA001000D0150007000000064C
:102DA300EA00C00F00000200EA00C01F0013036026
:102DB300EA00C02300002080D2CC7428D5E0FD2295
:102DC300C2CC80F6B1BB7405D106B1C37401C10690
:102DD300EC2403F8740FF6EC2404F87F04E493F670
:102DE300A308DFF922E4A8047A08F608DAFC227AB9
:102DF30003DAFE22C2C3B1F2D2C3B1F2C2C3B1F24B
:102E0300A2C222B1F7D5E0FB22A8047A08E613F6A2
:102E130008DAFA22D10C92C0B1F7DFF822C0E0EC55
:102E23002407F8D0E0F6B1BB7402D106B1C3740233
:102E3300D1067F07D117B1BB7F01D117C2C074027E
:102E4300D106B1C37402D10622D5E002C154FFD129
:102E530017B1BB7F01D117C2C07401D106B1C374CE
:102E630001D1062274E0D120B1D37424D14C227451
:102E7300E4D120B1E87401D1927401D14C2274E100
:102E8300D120B1DAC18D74E3D1207420D14C22C09A
:102E9300E0EC2407F8D0E0F622D167D172D1892281
:102EA300D167D181D172227E09902D73D1A3DEFC2B
:102EB30022C00078BB7600D000021F3820150BC05B
:102EC3000078BB7600D000022017D24A022017B444
:102ED3000403022EDB02085E78BAB6AA0375F5076F
:102EE300760002085CC000C002C003C004C006C074
:102EF3000778BBE6B40027AC810C7B08C0E0DBFCA1
:102F03000000B1BBB1C7D1AAB1C700007B08D0E0B4
:102F1300DBFC78BA76AA78BB7655D2C0B1BBD000B9
:102F2300D002D003D004D006D00720130302128AA4
:032F3300C20E22A9
:00000001FF
[\AIO23]

[\CUSTOM]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SMC Analysis
;
; The SMC Analysis section defines binary patterns with wildcard
; capability.  These are used to search the SMC to report which
; hacks and patches have been applied.
;
; These are for reporting purposes only, they do not have any impact
; on the SMC file itself.
;
; The user can also write their own analysis scripts!
; 
; FORMAT:
; [NAME=<pattern name>]
; [PAT=<code pattern>]
; [WILD=<wild card flags>]
; [\<pattern_name>]
;
; The pattern is a hexstring representing bytes.  The wildcard field
; has one bit for each pattern byte.  A '1' will mask the corresponding byte so it is
; not compared in the search.  A '0' means it is compared.  This is useful
; for parameters that might change, like SMC I/O used, etc.
[ANALYSIS]

[NAME=DMA_READ_HACK]
; Search for the DMA Read hack
; CJNE A, #04h, #03h = 0xB4 0x04 0x03
; LJMP <don't care> = 0x02 0x?? 0x??
; LJMP <don't care> = 0x02 0x?? 0x??
;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
[PAT=B4040302000002]
;     0123456789            <= this line is just for byte labeling
[WILD=0000110]
[\DMA_READ_HACK]

[NAME=GPU_JTAG]
; Search for the GPU JTAG hack
; POP ACC = 0xD0 0xE0
; DJNZ R3, 0FEh = 0xDB 0xFC
; MOV R0, ?? = 0x78 0x??
; MOV @R0, ?? = 0x76 0x??
;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
[PAT=D0E0DBFC78007600]
;     0123456789            <= this line is just for byte labeling
[WILD=00000101]
[\GPU_JTAG]

[NAME=PCI_MASK_BUG]
; Search for the original hack's PCI write mask bug
[PAT=2407D0E0F8]
[WILD=00000]
[\PCI_MASK_BUG]

[NAME=TMS_PATCH]
; Search for the 'set_jtag_tms' and 'clr_jtag_tms' functions
; SETB <TMS> MOV A <TMS_DELAY> DJNZ ACC -3 RET CLR <TMS> 
; = 0xD2 0x?? 0x74 0x?? 0xD5 0xE0 0xFD 0x22 0xC2 0x??
;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
[PAT=D2007400D5E0FD22C200]
;     0123456789	    <= this line is just for byte labeling
[WILD=0101000001]
[REP:TMS_value_is=1]
[\TMS_PATCH]

[NAME=TDI_PATCH_0_of_3]
; clk_jtag_data_out subroutine
; MOV <TDI>, C  ACALL <addr>  DJNZ R7, -8  RET
; = 0x92 <TDI> ACALL <addr> DF F8 22
;     0 1 2 3 4 5 6    <= this line is just for byte labeling
[PAT=92000000DFF822]
;     0123456	       <= this line is just for byte labeling
[WILD=0111000]
[REP:TDI_value_is=1]
[\TDI_PATCH_0_of_3]

[NAME=TDI_PATCH_1_of_3]
; clk_data_into_IR_reg subroutine
; CLR <TDI>  MOV A, #02h  ACALL <don't care>  ACALL <don't care>  MOV A, #02h
; = 0xC2 <TDI> 0x74 0x02 0x00 0x00 0x00 0x00 0x74 0x02
;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
[PAT=C2007402000000007402]
;     0123456789	       <= this line is just for byte labeling
[WILD=0100111100]
[REP:TDI_value_is=1]
[\TDI_PATCH_1_of_3]

[NAME=TDI_PATCH_2_of_3]
; clk_data_into_DR_reg subroutine
; MOV R7, #01h  ACALL <don't care>  CLR <TDI>  MOV A, #01h
; = 0x7F 0x01 0x00 0x00 0xC2 <TDI> 0x74 0x01
;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
[PAT=7F010000C2007401]
;     0123456789	       <= this line is just for byte labeling
[WILD=00110100]
[REP:TDI_value_is=5]
[\TDI_PATCH_2_of_3]

[NAME=TDI_PATCH_3_of_3]
; main jtag hack subroutine
; mov @R0, <don't care>  MOV R0, <don't care>  MOV @R0, <don't care>  SETB <TDI>
; = 0x76 0x00 0x78 0x00 0x76 0x00 0xD2 0x00
;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
[PAT=760078007600D200]
;     0123456789	       <= this line is just for byte labeling
[WILD=01010101]
[REP:TDI_value_is=7]
[\TDI_PATCH_3_of_3]

[NAME=PNC_CHARGE]
; charge_det subroutine
; JB 022h.5,0Bh  PUSH R0  MOV R0,<D/C>  MOV @R0,0h
; 0x20 0x15 0x0B 0xC0 0x00 0x78 0x?? 0x76 0x00
;     0 1 2 3 4 5 6 7 8 9      <= this line is just for byte labeling
[PAT=20150BC00078007600]
;     0123456789	       <= this line is just for byte labeling
[WILD=000000100]
[\PNC_CHARGE]

[NAME=PNC_NO_CHARGE]
; Search for the charging det function, look for shutdown flag
; POP R0  LJMP <D/C> <D/C>  SETB <D/C> LJMP
; = 0xD0 0x00 0x02 0x?? 0xD2 0x04 0x02
;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
[PAT=D000020000D20402]
;     0123456789            <= this line is just for byte labeling
[WILD=00011000]
[\PNC_NO_CHARGE]

;;[NAME=UNCONDITIONAL_BOOT]
;; Search for the JTAG boot gate
;; PUSH R7  NOP  MOV A, RAM_3D  CJNE A, #082h, <d/c>
;; = 0xC0 0x07 0x78 0x?? 0xE6 0x00 0x00 0x00
;;     0 1 2 3 4 5 6 7 8 9   <= this line is just for byte labeling
;[PAT=C00700E53DB48200]
;;     0123456789            <= this line is just for byte labeling
;[WILD=00000001]
;[\UNCONDITIONAL_BOOT]

[\ANALYSIS]
